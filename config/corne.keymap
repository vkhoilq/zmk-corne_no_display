/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    chosen {
        zmk,matrix_transform = &default_transform;

        // zmk,matrix_transform = &five_column_transform;
    };
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD0";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo1 {
            bindings = <&kp B>;
            key-positions = <13 14>;
        };
    };

    macros {
        pdw: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp AT &kp LS(T) &kp I &kp N0 &kp N2 &kp C &kp A &kp N0 &kp N9>;
            label = "NEW_MACRO";
        };

        ENTER_VIM_COMMAND: ENTER_VIM_COMMAND {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ESCAPE &kp COLON>;
            label = "ENTER_VIM_COMMAND";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";

            // --------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   | 
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &mt N1 Q        &mt NUMBER_2 W  &mt NUMBER_3 E      &mt N4 R          &mt N5 T               &mt NUMBER_6 Y  &mt N7 U           &mt N8 I     &mt N9 O         &mt N0 P                   &kp BSLH
&kp LALT   &mt LEFT_WIN A  &mt LEFT_ALT S  &mt LEFT_CONTROL D  &mt LEFT_SHIFT F  &mt LEFT_BRACKET G     &mt MINUS H     &mt RIGHT_SHIFT J  &mt RCTRL K  &mt RIGHT_ALT L  &mt RIGHT_SHIFT SEMICOLON  &kp SQT
&kp LCTRL  &kp Z           &kp X           &kp C               &kp V             &mt RIGHT_BRACKET B    &mt EQUAL N     &kp M              &kp COMMA    &kp DOT          &kp FSLH                   &kp GRAVE
                                           &lt 3 ESCAPE        &lt 2 BACKSPACE   &lt 4 TAB              &lt 3 ENTER     &kp SPACE          &kp ENTER
            >;
        };

        lower_layer {
            display-name = "RESERVED";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp N1           &kp N2          &kp N3        &kp N4        &kp N5             &kp N6           &kp N7           &kp N8           &kp N9           &kp N0    &kp BSPC
&trans  &bt BT_CLR_ALL   &bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3       &kp LEFT         &kp DOWN         &kp UP           &kp RIGHT        &kp HOME  &kp PG_UP
&none   &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &trans        &trans        &rgb_ug RGB_EFF    &rgb_ug RGB_EFR  &rgb_ug RGB_SPI  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &kp END   &kp PG_DN
                                         &trans        &trans        &trans             &kp INS          &kp DEL          &trans
            >;
        };

        raise_layer {
            display-name = "NUMBER";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp N1        &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4    &kp N5                        &kp NUMBER_6  &kp N7                    &kp N8           &kp N9         &kp N0  &kp INSERT
&trans  &kp LEFT_GUI  &kp LEFT_ALT  &kp LCTRL     &kp LEFT_SHIFT  &kp LS(LC(INSERT))            &kp HOME      &mt RIGHT_SHIFT UP_ARROW  &kp END          &kp PAGE_UP    &trans  &trans
&trans  &trans        &trans        &none         &none           &ENTER_VIM_COMMAND            &kp LEFT      &kp DOWN_ARROW            &kp RIGHT_ARROW  &kp PAGE_DOWN  &trans  &trans
                                    &trans        &trans          &mt LEFT_SHIFT RIGHT_ARROW    &kp RET       &kp SPACE                 &kp ENTER
            >;
        };

        layer_3 {
            display-name = "Fn";
            bindings = <
&bt BT_SEL 0  &trans        &pdw    &trans              &kp LA(UP_ARROW)    &trans                 &kp F1  &kp F2  &kp F3  &kp F4   &kp F5   &kp F6
&bt BT_SEL 1  &bt BT_CLR    &trans  &kp LA(LEFT_ARROW)  &kp LA(DOWN_ARROW)  &kp LA(RIGHT_ARROW)    &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&bt BT_SEL 2  &out OUT_BLE  &trans  &trans              &trans              &kp LC(LEFT_SHIFT)     &trans  &trans  &trans  &trans   &trans   &trans
                                    &trans              &trans              &trans                 &trans  &trans  &trans
            >;
        };

        layer_4 {
            display-name = "MOUSE";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans          &trans          &trans           &trans          &trans  &trans
&trans  &trans  &trans  &trans  &trans  &kp LC(LG(LEFT_ARROW))    &trans          &mmv MOVE_UP    &trans           &msc SCRL_UP    &trans  &trans
&trans  &trans  &trans  &trans  &trans  &kp LC(LG(RIGHT))         &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &msc SCRL_DOWN  &trans  &trans
                        &trans  &trans  &trans                    &mkp LCLK       &mkp RCLK       &mkp MCLK
            >;
        };

        layer_5 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;

            label = "TV_REMOTE";
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
